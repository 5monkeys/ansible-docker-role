---

- name: Create certificates directory
  file:
    path: "{{ docker_tls_path }}"
    state: directory
  tags:
    - tls-server
    - tls-client

- name: ca-key.pem
  openssl_privatekey:
    path: "{{ docker_tls_path }}/ca-key.pem"
    size: 8192
  register: root_cert
  notify:
    - restart docker
  tags:
    - tls-root

- name: ca.csr
  openssl_csr:
    path: "{{ docker_tls_path }}/ca.csr"
    privatekey_path: "{{ docker_tls_path }}/ca-key.pem"
    common_name: "Root CA Certificate"
    organization_name: "{{ docker_tls_organization }}"
  notify:
    - restart docker
  tags:
    - tls-root


- name: ca.pem
  openssl_certificate:
    path: "{{ docker_tls_path }}/ca.pem"
    privatekey_path: "{{ docker_tls_path }}/ca-key.pem"
    csr_path: "{{ docker_tls_path }}/ca.csr"
    provider: selfsigned
  notify:
    - restart docker
  tags:
    - tls-root


#- name: ca.pem
#  command: >
#    openssl req -new -sha256 -x509 -days 1826 \
#      -subj "/O={{ docker_tls_organization }}/CN=Root CA Certificate" \
#      -key ca-key.pem \
#      -out ca.pem
#  args:
#    chdir: "{{ docker_tls_path }}"
#    creates: ca.pem
#  register: root_cert
#  notify:
#    - restart docker
#  tags:
#    - tls-root

- name: server-key.pem
  openssl_privatekey:
    path: "{{ docker_tls_path }}/server-key.pem"
  notify:
    - restart docker
  tags:
    - tls-server


- name: server.csr
  openssl_csr:
    path: "{{ docker_tls_path }}/server.csr"
    privatekey_path: "{{ docker_tls_path }}/server-key.pem"
    organization_name: "{{ docker_tls_organization }}"
    extended_key_usage:
      - "serverAuth"
    subject_alt_name:
      - "IP:{{ ansible_eth0.ipv4.address }}"
      - "IP:127.0.0.1"
      - "DNS:localhost"
  tags:
    - tls-server

- name: server-cert.pem
  openssl_certificate:
    path: "{{ docker_tls_path }}/server-cert.pem"
    privatekey_path: "{{ docker_tls_path }}/server-key.pem"
    csr_path: "{{ docker_tls_path }}/server.csr"
    provider: selfsigned
    ownca_path: "{{ docker_tls_path }}/ca.pem"
    ownca_privatekey_path: "{{ docker_tls_path }}/ca-key.pem"
  tags:
    - tls-server


#- name: server-cert.pem
#  command: >
#    openssl x509 -req -sha256 -days 365 \
#      -CAcreateserial \
#      -CA ca.pem \
#      -CAkey ca-key.pem \
#      -extfile server.cnf \
#      -in server.csr \
#      -out server-cert.pem
#  args:
#    chdir: "{{ docker_tls_path }}"
#    creates: "{{ '__force__' if root_cert is defined and root_cert|changed else 'server-cert.pem'}}"
#  notify:
#    - restart docker
#  tags:
#    - tls-server

- name: Configure docker daemon with TLS
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    backup: true
  notify:
    - restart docker
  tags:
    - tls-server

- name: key.pem
  openssl_privatekey:
    path: "{{ docker_tls_path }}/key.pem"
  tags:
    - tls-client

- name: server.csr
  openssl_csr:
    path: "{{ docker_tls_path }}/client.csr"
    privatekey_path: "{{ docker_tls_path }}/key.pem"
    organization_name: "{{ docker_tls_organization }}"
    common_name: "client"
    extendedKeyUsage:
      - "clientAuth"
  tags:
    - tls-server


#- name: client.csr
#  command: >
#    openssl req -new \
#      -subj "/CN=client" \
#      -key key.pem \
#      -out client.csr
#  args:
#    chdir: "{{ docker_tls_path }}"
#    creates: client.csr
#  tags:
#    - tls-client
#
#- name: client.cnf
#  copy:
#    content: extendedKeyUsage = clientAuth
#    dest: "{{ docker_tls_path }}/client.cnf"
#  tags:
#    - tls-client

- name: cert.pem
  openssl_certificate:
    path: "{{ docker_tls_path }}/cert.pem"
    privatekey_path: "{{ docker_tls_path }}/key.pem"
    csr_path: "{{ docker_tls_path }}/client.csr"
    provider: selfsigned
    ownca_path: "{{ docker_tls_path }}/ca.pem"
    ownca_privatekey_path: "{{ docker_tls_path }}/ca-key.pem"
  tags:
    - tls-client


#- name: cert.pem
#  command: >
#    openssl x509 -req -sha256 -days 365 \
#      -CAcreateserial \
#      -CA ca.pem \
#      -CAkey ca-key.pem \
#      -extfile client.cnf \
#      -in client.csr \
#      -out cert.pem
#  args:
#    chdir: "{{ docker_tls_path }}"
#    creates: "{{ '__force__' if root_cert is defined and root_cert|changed else 'cert.pem'}}"
#  tags:
#    - tls-client

#- name: Set key permissions
#  file:
#    path: "{{ docker_tls_path }}/{{ item }}"
#    mode: 0400
#  with_items:
#    - ca-key.pem
#    - server-key.pem
#    - key.pem
#  tags:
#    - tls-server
#    - tls-client
#- name: Set certificate permissions
#  file:
#    path: "{{ docker_tls_path }}/{{ item }}"
#    mode: 0444
#  with_items:
#    - ca.pem
#    - server-cert.pem
#    - cert.pem
#  tags:
#    - tls-server
#    - tls-client

- name: Download client certificates
  fetch:
    src: "{{ docker_tls_path }}/{{ item }}"
    dest: "{{ docker_home }}"
    flat: true
  with_items:
    - ca.pem
    - key.pem
    - cert.pem
  tags:
    - tls-client
    - tls-download
